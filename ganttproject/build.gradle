buildscript {
    ext.kotlin_version = '1.3.+'
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.openjfx:javafx-plugin:0.0.+'
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.openjfx.javafxplugin'


ext {
    libDir = 'lib/core'
}

repositories {
    mavenCentral()
    jcenter()
}

javafx {
    modules = [ 'javafx.controls', 'javafx.swing', 'javafx.web' ]
}
dependencies {
    compile fileTree(dir: project.ext.libDir, include: ['*.jar'])
    compile fileTree(dir: project.ext.mvnDir, include: ['*.jar'])
    compile project(':biz.ganttproject.core')
    compile files('data/resources')

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.+'
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-javafx:1.+'

    compile group: 'org.controlsfx', name: 'controlsfx', version: '9.0.+'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.+'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.+'
    compile group: 'de.jensd', name: 'fontawesomefx-fontawesome', version: '4.7.0-11', transitive: true
    // https://mvnrepository.com/artifact/org.apache.poi/poi
    compile group: 'org.apache.poi', name: 'poi', version: '3.17'
    compile group: 'org.nanohttpd', name: 'nanohttpd', version: '2.3.+'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.+'
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.+'
    compile group: 'org.jdom', name: 'jdom', version: '1.1.+'
    compile group: 'net.sf.json-lib', name: 'json-lib', version: '2.4', classifier: 'jdk15'
    compile group: 'xml-apis', name: 'xml-apis', version: '2.0.2'
    compile group: 'com.googlecode.concurrentlinkedhashmap', name: 'concurrentlinkedhashmap-lru', version: '1.4.2'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.+'
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.+'
    compile group: 'com.evanlennick', name:'retry4j', version:'0.+'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDirs = ["src"]
            include "**/*.css"
        }
    }

    main.kotlin.srcDirs += 'src'
}

assemble.dependsOn += updateMavenDeps

task updateVersion {
    doFirst {
        def gpVersionFile = new File("${projectDir}/src/net/sourceforge/ganttproject/GPVersion.java")
        def gpversion = gpVersionFile.getText('UTF-8')
                .replaceAll('.*BUILD.NUMBER.*', "  public static String BUILD = \"${rootProject.buildNum}\"; // BUILD NUMBER")
        gpVersionFile.write(gpversion, 'UTF-8')
    }
}


task copyPluginFiles {
    copy {
        into(new File(rootProject.pluginsDir, project.name))
//        from(jar.outputs.getFiles().getFiles().flatten())
        from(fileTree(".")) {
            include "plugin.xml"
//            include "lib/core/**.jar"
//            exclude "lib/core/eclipsito.jar"
//            include "lib/mvn/**.jar"
            include "data/resources/**.ttf"
            include "data/resources/**.properties"
            include "data/resources/calendar/**"
            include "data/resources/icons/**"
            include "data/resources/language/**"
            include "data/resources/xslfo/**"
            include "data/resources/xslt/**"
        }
    }
    copy {
        into(new File(rootProject.pluginsDir, "${project.name}/lib/core"))
        from(configurations.compileClasspath) {
            include "*.jar"
        }
    }
}

task copyEclipsito(type: Copy) {
    into(rootProject.distBinDir)
    from(fileTree("lib/core")) {
        include "eclipsito.jar"
    }
}

task copyPlugin(dependsOn: ['copyPluginFiles', 'copyEclipsito']) {
    doFirst {
        println "Copying $project.name to $rootProject.pluginsDir"
    }
}
